name: Validate Solutions

on:
  pull_request:
    paths:
      - "problems/**"

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.pull_request.number }}/merge

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run tests
        id: pytest
        run: |
          pytest problems/easy/

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            problems/**

      - name: Determine Points
        id: points
        run: |
          POINTS=0
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == problems/easy/* ]]; then
              POINTS=$((POINTS + 10))
            elif [[ "$file" == problems/intermediate/* ]]; then
              POINTS=$((POINTS + 20))
            elif [[ "$file" == problems/hard/* ]]; then
              POINTS=$((POINTS + 30))
            fi
          done
          echo "POINTS=$POINTS" >> $GITHUB_ENV

      - name: Post test result as a PR comment
        if: always()
        uses: actions/github-script@v6
        with:
          script: |
            const prNumber = ${{ github.event.pull_request.number }};
            const testOutcome = ${{ steps.pytest.outcome }};
            const testResults = testOutcome === 'success' ? '✅ All tests passed!' : '❌ Tests failed. See logs for details.';
            const comment = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: testResults
            };
            github.rest.issues.createComment(comment);
