name: Validate Solutions

on:
  pull_request_target:
    paths:
      - 'problems/**'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest

      - name: Run tests
        id: pytest
        run: |
          pytest problems/easy/

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          files: |
            problems/**

      - name: Determine Points
        id: points
        run: |
          POINTS=0
          for file in ${{ steps.changed-files.outputs.all_changed_files }}; do
            if [[ "$file" == problems/easy/* ]]; then
              POINTS=$((POINTS + 10))
            elif [[ "$file" == problems/intermediate/* ]]; then
              POINTS=$((POINTS + 20))
            elif [[ "$file" == problems/hard/* ]]; then
              POINTS=$((POINTS + 30))
            fi
          done
          echo "POINTS=$POINTS" >> $GITHUB_ENV

      - name: Update leaderboard if success
        if: steps.pytest.outcome == 'success'
        run: |
          AUTHOR="${{ github.event.pull_request.user.login }}"
          POINTS_EARNED=${{ env.POINTS }}
          FILE="leaderboard.md"

          # Create file if it doesn't exist
          if [ ! -f "$FILE" ]; then
            echo "| Participant | Points |" > $FILE
            echo "|:------------|-------:|" >> $FILE
          fi

          # Check if the participant already exists
          if grep -q "| $AUTHOR |" "$FILE"; then
            CURRENT_POINTS=$(grep "| $AUTHOR |" "$FILE" | awk -F'|' '{print $3}' | tr -d ' ')
            NEW_POINTS=$((CURRENT_POINTS + POINTS_EARNED))
            sed -i "s/| $AUTHOR |.*|/| $AUTHOR | $NEW_POINTS |/" "$FILE"
          else
            echo "| $AUTHOR | $POINTS_EARNED |" >> $FILE
          fi

      - name: Commit leaderboard
        if: steps.pytest.outcome == 'success'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add leaderboard.md
          git commit -m "Update leaderboard for ${{ github.event.pull_request.user.login }}"
          git push
